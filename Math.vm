function Main.test  1
    // x = mult(10, 2)
    push constant a
    push constant 2
    call Math.mult 2 2
    pop local 0

    // y = div(10, 2)
    push constant a
    push constant 2
    call Math.div 2 2
    pop local 1

    // z = max(10, 2)
    push constant a
    push constant 2
    call Math.max 2 2
    pop local 2  

    // j = min(10, 2)
    push constant a
    push constant 2
    call Math.min 2 2
    pop local 3 

    // h = sqrt(49)
    push constant 31
    call Math.sqrt 3 1
    pop local 4 

    (whileForever)
    goto whileForever

function Math.mult 2 2
    push constant 0
    pop local 0

    push argument 1
    pop local 1

    (while_start_1)
    push local 1
    push constant 0
    nequ
        
    if-goto true_while_1
    goto false_while_1
    (true_while_1)
    push local 0
    push argument 0
    add
    pop local 0

    push local 1
    push constant 1
    sub
    pop local 1

    goto while_start_1
    (false_while_1)
    
    push local 0
    return

function Math.div 2 2
    push constant 0
    pop local 0

    push argument 0
    pop local 1
    (while_start_2)
    push local 1
    push argument 1
    gte
        
    if-goto true_while_2
    goto false_while_2
    (true_while_2)
    
    push argument 0
    push argument 1
    sub
    
    pop argument 0
    push local 0
    push constant 1
    add
    pop local 0
    
    push argument 0
    pop local 1

    goto while_start_2
    (false_while_2)
    
    push local 0
    return

function Math.max 2 2
    push constant 0
    pop local 0

    //if (x > y) temp = x
    push argument 0
    push argument 1
    gt
    if-goto true_statement_3
    goto false_statement_3
    (true_statement_3)
    push argument 0
    pop local 0
    goto End_3
    (false_statement_3)
    push argument 1
    pop local 0
    (End_3)
    push local 0
    return

function Math.min 2 2
    push constant 0
    pop local 0

    //if (x < y)
    push argument 0
    push argument 1
    lt
    if-goto true_statement_4
    goto false_statement_4
    (true_statement_4)
    push argument 0
    pop local 0
    goto End_4
    (false_statement_4)
    push argument 1
    pop local 0
    (End_4)
    push local 0
    return
    
function Math.sqrt 3 1
    push constant 0
    pop local 0

    push constant 1
    pop local 1
    push argument 0
    pop local 2
  
    (while_start_6)
    push local 2
    push local 1
    gte
        
    if-goto true_while_6
    goto false_while_6
    (true_while_6)
    
    push local 2
    push local 1
    sub
    pop local 2

    push local 1
    push constant 2
    add
    pop local 1

    push local 0
    push constant 1
    add 
    pop local 0

    goto while_start_6
    (false_while_6)
    
    push local 0
    return