function File.main 3 0
push constant 3
pop local 0
push constant 25
pop local 1
push constant 49
call Math.sqrt 3 1
pop local 2
(whileStatementStart_5)
push constant 1
if-goto whileTrueStatement_5
goto whileEndStatement_5
(whileTrueStatement_5)
goto whileStatementStart_5
(whileEndStatement_5)


function Math.main 8 0
push constant 2
pop local 0
push constant 121
pop local 1
push constant 4
pop local 2
push constant 5
pop local 3
push local 0
push local 1
call Math.mul 2 2
pop local 4
push local 0
push local 3
call Math.max 1 2
pop local 5
push local 1
call Math.sqrt 3 1
pop local 6
push local 0
push local 2
push local 3
add
call Math.mul 2 2
pop local 7
(whileStatementStart_6)
push constant 1
if-goto whileTrueStatement_6
goto whileEndStatement_6
(whileTrueStatement_6)
goto whileStatementStart_6
(whileEndStatement_6)


function Math.mul 2 2
push constant 0
pop local 0
push argument 1
pop local 1
(whileStatementStart_7)
push local 1
push constant 0
nequ
if-goto whileTrueStatement_7
goto whileEndStatement_7
(whileTrueStatement_7)
push local 0
push argument 0
add
pop local 0
push local 1
push constant 1
sub
pop local 1
goto whileStatementStart_7
(whileEndStatement_7)
push local 0
return


function Math.max 1 2
push argument 0
pop local 0
push argument 1
push argument 0
gt
if-goto ifTrueStatement_2
goto ifFalseStatement_2
(ifTrueStatement_2)
push argument 1
pop local 0
goto ifEndStatement_2
(ifFalseStatement_2)
(ifEndStatement_2)
push local 0
return


function Math.min 1 2
push argument 0
pop local 0
push argument 1
push argument 0
lt
if-goto ifTrueStatement_3
goto ifFalseStatement_3
(ifTrueStatement_3)
push argument 1
pop local 0
goto ifEndStatement_3
(ifFalseStatement_3)
(ifEndStatement_3)
push local 0
return


function Math.sqrt 3 1
push argument 0
pop local 1
push constant 1
pop local 0
push constant 0
pop local 2
(whileStatementStart_8)
push local 1
push local 0
gte
if-goto whileTrueStatement_8
goto whileEndStatement_8
(whileTrueStatement_8)
push local 1
push local 0
sub
pop local 1
push local 0
push constant 2
add
pop local 0
push local 2
push constant 1
add
pop local 2
goto whileStatementStart_8
(whileEndStatement_8)
push local 2
return


function Math.div 3 2
push argument 0
pop local 0
push constant 0
pop local 2
push constant 0
pop local 1
(whileStatementStart_9)
push local 0
push argument 1
gte
if-goto whileTrueStatement_9
goto whileEndStatement_9
(whileTrueStatement_9)
push local 0
push argument 1
sub
pop local 0
push local 2
push constant 1
add
pop local 2
push local 1
push constant 1
add
pop local 1
goto whileStatementStart_9
(whileEndStatement_9)
push local 1
return


