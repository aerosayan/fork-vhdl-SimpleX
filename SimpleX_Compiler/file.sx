//This is a demobstration of my Tokenizer functionality

class File 
{ 
    field Array arr1[100];

    method void main()
    {
        int sum, r;
        int ser_size, step, start;
        
         let start = 1;
         let step = 3;
         let ser_size = 11;
         let r = createSeries(start, step, ser_size);
                   
         let sum =  sumSeries(ser_size);
         let r = average(ser_size);

         while(1)
         {}
       
         return 0;
    }


     method int average(int size)
    {
       int y, sum, avr;
       let avr = 0;
       let sum = 0;

       let y = 0;
       while(y < size)
       {
          let sum = sum + arr1[y];
          let y = y + 1;
       }

       let avr = div(sum, size);

       return avr;
    }

    
    method int sumSeries(int num)
    {
        int y, sum;
        let y = 0;
        let sum = 0;
        while (y < num )
        {
           let sum = sum + arr1[y];
           let y = y + 1;
        }

        return sum;
    }

    method int createSeries(int startVal, int dist, int size)
    {
        int y;
        let y = 0;
        while( y < size)
        {
            let arr1[y] = startVal;
            let y = y + 1;
            let startVal = startVal + dist; // series startVal, startVal + dist, startVal + 2dist,...
        }

        return 0;
    }

   
    method int div(int x, int y) 
    {
        int remainder;
        int result;
        int N;

        let remainder = x;
        let N = 0;
        let result = 0;
        while (remainder >= y)
        {
            let remainder = remainder - y;
            let N = N + 1;
            let result = result + 1;
        }
              
        return result;
    }
    
}